<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>serialization on Amish Kumar Naidu</title>
    <link>https://amish.naidu.dev/tags/serialization/</link>
    <description>Recent content in serialization on Amish Kumar Naidu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2022 Amish K. Naidu</copyright>
    <lastBuildDate>Sat, 30 Jan 2021 19:34:17 +0530</lastBuildDate><atom:link href="https://amish.naidu.dev/tags/serialization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writing custom serde deserializers, the easy way</title>
      <link>https://amish.naidu.dev/blog/serde-deserialize/</link>
      <pubDate>Sat, 30 Jan 2021 19:34:17 +0530</pubDate>
      
      <guid>https://amish.naidu.dev/blog/serde-deserialize/</guid>
      <description>Serde is a great library for serializing/deserializing in Rust. It allows you to directly convert rust data structures using a few attributes. Most of the time, It Just Works â„¢ and when it doesn&amp;rsquo;t, you can write your own serializers or deserializers!
Problem at hand: There exists a type which can be parsed from a string but serde has no built in support for it. For the purposes of an example, let&amp;rsquo;s say the type is std::net::IpAddr and forget that serde has support for it already.</description>
    </item>
    
  </channel>
</rss>
